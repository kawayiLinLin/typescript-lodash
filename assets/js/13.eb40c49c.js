(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{196:function(s,t,a){"use strict";a.r(t);var e=a(6),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"common-工具类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#common-工具类型"}},[s._v("#")]),s._v(" common 工具类型")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://codesandbox.io/s/typescript-lodash-example-1l5hn?file=/src/common.ts",target:"_blank",rel:"noopener noreferrer"}},[s._v("在 CodeSandBox 中尝试"),a("OutboundLink")],1)]),s._v(" "),a("h2",{attrs:{id:"and-与"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#and-与"}},[s._v("#")]),s._v(" And 与")]),s._v(" "),a("p",[s._v("求出两个布尔类型进行逻辑与的结果")]),s._v(" "),a("p",[a("strong",[s._v("泛型参数")])]),s._v(" "),a("ul",[a("li",[a("p",[s._v("C1")]),s._v(" "),a("ul",[a("li",[s._v("约束 "),a("code",[s._v("boolean")])]),s._v(" "),a("li",[s._v("必须 "),a("code",[s._v("是")])])])]),s._v(" "),a("li",[a("p",[s._v("C2")]),s._v(" "),a("ul",[a("li",[s._v("约束 "),a("code",[s._v("boolean")])]),s._v(" "),a("li",[s._v("必须 "),a("code",[s._v("是")])])])])]),s._v(" "),a("p",[a("strong",[s._v("示例")])]),s._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" common "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"typescript-lodash"')]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Result1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" common"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("And"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// true")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Result2")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" common"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("And"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// false")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Result3")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" common"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("And"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// false")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Result4")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" common"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("And"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// false")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 你可以使用 common.And3 和 common.And4 进行多个布尔类型的计算")]),s._v("\n")])])]),a("h2",{attrs:{id:"or-或"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#or-或"}},[s._v("#")]),s._v(" Or 或")]),s._v(" "),a("p",[s._v("求出两个布尔类型进行逻辑或的结果")]),s._v(" "),a("p",[a("strong",[s._v("泛型参数")])]),s._v(" "),a("ul",[a("li",[a("p",[s._v("C1")]),s._v(" "),a("ul",[a("li",[s._v("约束 "),a("code",[s._v("boolean")])]),s._v(" "),a("li",[s._v("必须 "),a("code",[s._v("是")])])])]),s._v(" "),a("li",[a("p",[s._v("C2")]),s._v(" "),a("ul",[a("li",[s._v("约束 "),a("code",[s._v("boolean")])]),s._v(" "),a("li",[s._v("必须 "),a("code",[s._v("是")])])])])]),s._v(" "),a("p",[a("strong",[s._v("示例")])]),s._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" common "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"typescript-lodash"')]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Result1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" common"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Or"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// true")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Result2")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" common"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Or"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// true")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Result3")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" common"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Or"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// true")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Result4")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" common"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Or"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// false")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 你可以使用 common.Or3 和 common.Or4 进行多个布尔类型的计算")]),s._v("\n")])])]),a("h2",{attrs:{id:"not-非"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#not-非"}},[s._v("#")]),s._v(" Not 非")]),s._v(" "),a("p",[s._v("求出布尔类型进行逻辑非的结果")]),s._v(" "),a("p",[a("strong",[s._v("泛型参数")])]),s._v(" "),a("ul",[a("li",[s._v("C\n"),a("ul",[a("li",[s._v("约束 "),a("code",[s._v("boolean")])]),s._v(" "),a("li",[s._v("必须 "),a("code",[s._v("是")])])])])]),s._v(" "),a("p",[a("strong",[s._v("示例")])]),s._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" common "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"typescript-lodash"')]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Result1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" common"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Not"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// true")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Result2")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" common"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Not"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// false")]),s._v("\n")])])]),a("h2",{attrs:{id:"checkleftisextendsright-约束校验"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#checkleftisextendsright-约束校验"}},[s._v("#")]),s._v(" CheckLeftIsExtendsRight 约束校验")]),s._v(" "),a("p",[s._v("校验左侧类型是否满足右侧类型的约束")]),s._v(" "),a("p",[s._v("如果是，则得到 "),a("code",[s._v("true")]),s._v("，否则得到 "),a("code",[s._v("false")])]),s._v(" "),a("p",[a("strong",[s._v("泛型参数")])]),s._v(" "),a("ul",[a("li",[a("p",[s._v("T")]),s._v(" "),a("ul",[a("li",[s._v("约束 "),a("code",[s._v("any")])]),s._v(" "),a("li",[s._v("必须 "),a("code",[s._v("是")])])])]),s._v(" "),a("li",[a("p",[s._v("R")]),s._v(" "),a("ul",[a("li",[s._v("约束 "),a("code",[s._v("any")])]),s._v(" "),a("li",[s._v("必须 "),a("code",[s._v("是")])])])])]),s._v(" "),a("p",[a("strong",[s._v("示例")])]),s._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" common "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"typescript-lodash"')]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Result1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" common"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("CheckLeftIsExtendsRight"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("number")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// true")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Result2")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" common"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("CheckLeftIsExtendsRight"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("any")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// true")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Result3")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" common"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("CheckLeftIsExtendsRight"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// false")]),s._v("\n")])])]),a("h2",{attrs:{id:"isequal-类型相等"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#isequal-类型相等"}},[s._v("#")]),s._v(" IsEqual 类型相等")]),s._v(" "),a("p",[s._v("判断两个类型是否严格相等")]),s._v(" "),a("p",[s._v("如果是，则得到 "),a("code",[s._v("true")]),s._v("，否则得到 "),a("code",[s._v("false")])]),s._v(" "),a("p",[a("strong",[s._v("泛型参数")])]),s._v(" "),a("ul",[a("li",[a("p",[s._v("T")]),s._v(" "),a("ul",[a("li",[s._v("约束 "),a("code",[s._v("any")])]),s._v(" "),a("li",[s._v("必须 "),a("code",[s._v("是")])])])]),s._v(" "),a("li",[a("p",[s._v("R")]),s._v(" "),a("ul",[a("li",[s._v("约束 "),a("code",[s._v("any")])]),s._v(" "),a("li",[s._v("必须 "),a("code",[s._v("是")])])])])]),s._v(" "),a("p",[a("strong",[s._v("示例")])]),s._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" common "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"typescript-lodash"')]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Result1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" common"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("IsEqual"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("number")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// false")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Result2")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" common"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("IsEqual"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// true")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Result3")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" common"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("IsEqual"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("any")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// false")]),s._v("\n")])])]),a("h2",{attrs:{id:"isany-判断-any"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#isany-判断-any"}},[s._v("#")]),s._v(" IsAny 判断 any")]),s._v(" "),a("p",[s._v("判断当前类型是否为 any")]),s._v(" "),a("p",[s._v("如果是，则得到 "),a("code",[s._v("true")]),s._v("，否则得到 "),a("code",[s._v("false")])]),s._v(" "),a("p",[a("strong",[s._v("泛型参数")])]),s._v(" "),a("ul",[a("li",[s._v("T\n"),a("ul",[a("li",[s._v("约束 "),a("code",[s._v("any")])]),s._v(" "),a("li",[s._v("必须 "),a("code",[s._v("是")])])])])]),s._v(" "),a("p",[a("strong",[s._v("示例")])]),s._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" common "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"typescript-lodash"')]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Result1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" common"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("IsAny"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("unknown")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// false")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Result2")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" common"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("IsAny"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("any")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// true")]),s._v("\n")])])]),a("h2",{attrs:{id:"isnever-判断-never"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#isnever-判断-never"}},[s._v("#")]),s._v(" IsNever 判断 never")]),s._v(" "),a("p",[s._v("判断当前类型是否为 never")]),s._v(" "),a("p",[s._v("如果是，则得到 "),a("code",[s._v("true")]),s._v("，否则得到 "),a("code",[s._v("false")])]),s._v(" "),a("p",[a("strong",[s._v("泛型参数")])]),s._v(" "),a("ul",[a("li",[s._v("T\n"),a("ul",[a("li",[s._v("约束 "),a("code",[s._v("any")])]),s._v(" "),a("li",[s._v("必须 "),a("code",[s._v("是")])])])])]),s._v(" "),a("p",[a("strong",[s._v("示例")])]),s._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" common "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"typescript-lodash"')]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Result1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" common"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("IsNever"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("never")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// true")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Result2")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" common"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("IsNever"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// false")]),s._v("\n")])])]),a("h2",{attrs:{id:"isunion-判断联合类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#isunion-判断联合类型"}},[s._v("#")]),s._v(" IsUnion 判断联合类型")]),s._v(" "),a("p",[s._v("判断当前类型是否为联合类型")]),s._v(" "),a("p",[s._v("如果是，则得到 "),a("code",[s._v("true")]),s._v("，否则得到 "),a("code",[s._v("false")])]),s._v(" "),a("p",[a("strong",[s._v("泛型参数")])]),s._v(" "),a("ul",[a("li",[s._v("T\n"),a("ul",[a("li",[s._v("约束 "),a("code",[s._v("any")])]),s._v(" "),a("li",[s._v("必须 "),a("code",[s._v("是")])])])])]),s._v(" "),a("p",[a("strong",[s._v("示例")])]),s._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" common "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"typescript-lodash"')]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Result1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" common"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("IsUnion"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// true")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Result2")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" common"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("IsUnion"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// false")]),s._v("\n")])])]),a("h2",{attrs:{id:"diff-差异"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#diff-差异"}},[s._v("#")]),s._v(" Diff 差异")]),s._v(" "),a("p",[s._v("求两个联合类型的差异")]),s._v(" "),a("p",[a("strong",[s._v("泛型参数")])]),s._v(" "),a("ul",[a("li",[a("p",[s._v("T")]),s._v(" "),a("ul",[a("li",[s._v("约束 "),a("code",[s._v("any")])]),s._v(" "),a("li",[s._v("必须 "),a("code",[s._v("是")])])])]),s._v(" "),a("li",[a("p",[s._v("C")]),s._v(" "),a("ul",[a("li",[s._v("约束 "),a("code",[s._v("any")])]),s._v(" "),a("li",[s._v("必须 "),a("code",[s._v("是")])])])])]),s._v(" "),a("p",[a("strong",[s._v("示例")])]),s._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" common "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"typescript-lodash"')]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Result1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" common"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Diff"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 2 | 3")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Result2")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" common"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Diff"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// never")]),s._v("\n")])])]),a("h2",{attrs:{id:"sumaggregate-并集"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sumaggregate-并集"}},[s._v("#")]),s._v(" SumAggregate 并集")]),s._v(" "),a("p",[s._v("求两个联合类型的并集")]),s._v(" "),a("p",[a("strong",[s._v("泛型参数")])]),s._v(" "),a("ul",[a("li",[a("p",[s._v("T")]),s._v(" "),a("ul",[a("li",[s._v("约束 "),a("code",[s._v("any")])]),s._v(" "),a("li",[s._v("必须 "),a("code",[s._v("是")])])])]),s._v(" "),a("li",[a("p",[s._v("C")]),s._v(" "),a("ul",[a("li",[s._v("约束 "),a("code",[s._v("any")])]),s._v(" "),a("li",[s._v("必须 "),a("code",[s._v("是")])])])])]),s._v(" "),a("p",[a("strong",[s._v("示例")])]),s._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" common "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"typescript-lodash"')]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Result1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" common"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("SumAggregate"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 1 | 2 | 3")]),s._v("\n")])])]),a("h2",{attrs:{id:"nullable-可为空"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nullable-可为空"}},[s._v("#")]),s._v(" Nullable 可为空")]),s._v(" "),a("p",[s._v("将类型变为可以为空的类型")]),s._v(" "),a("p",[a("strong",[s._v("泛型参数")])]),s._v(" "),a("ul",[a("li",[s._v("T\n"),a("ul",[a("li",[s._v("约束 "),a("code",[s._v("any")])]),s._v(" "),a("li",[s._v("必须 "),a("code",[s._v("是")])])])])]),s._v(" "),a("p",[a("strong",[s._v("示例")])]),s._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" common "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"typescript-lodash"')]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Result1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" common"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Nullable"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 1 | 2 | null | undefined")]),s._v("\n")])])]),a("h2",{attrs:{id:"many-一个或若干个"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#many-一个或若干个"}},[s._v("#")]),s._v(" Many 一个或若干个")]),s._v(" "),a("p",[s._v("将类型变为可为数组的联合类型")]),s._v(" "),a("p",[a("strong",[s._v("泛型参数")])]),s._v(" "),a("ul",[a("li",[s._v("T\n"),a("ul",[a("li",[s._v("约束 "),a("code",[s._v("any")])]),s._v(" "),a("li",[s._v("必须 "),a("code",[s._v("是")])])])])]),s._v(" "),a("p",[a("strong",[s._v("示例")])]),s._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" common "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"typescript-lodash"')]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Result1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" common"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Many"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("string")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// string | string[]")]),s._v("\n")])])]),a("h2",{attrs:{id:"uniontointersection-联合转交叉"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#uniontointersection-联合转交叉"}},[s._v("#")]),s._v(" UnionToIntersection 联合转交叉")]),s._v(" "),a("p",[s._v("将联合类型变为交叉类型")]),s._v(" "),a("p",[a("strong",[s._v("泛型参数")])]),s._v(" "),a("ul",[a("li",[s._v("U\n"),a("ul",[a("li",[s._v("约束 "),a("code",[s._v("any")])]),s._v(" "),a("li",[s._v("必须 "),a("code",[s._v("是")])])])])]),s._v(" "),a("p",[a("strong",[s._v("示例")])]),s._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" common "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"typescript-lodash"')]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Result1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" common"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("UnionToIntersection"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" a"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" b"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// { a: 1 } & { b: 1 }")]),s._v("\n")])])]),a("h2",{attrs:{id:"uniontotuple-联合转元组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#uniontotuple-联合转元组"}},[s._v("#")]),s._v(" UnionToTuple 联合转元组")]),s._v(" "),a("p",[s._v("将联合类型变为元组类型")]),s._v(" "),a("p",[a("strong",[s._v("泛型参数")])]),s._v(" "),a("ul",[a("li",[s._v("U\n"),a("ul",[a("li",[s._v("约束 "),a("code",[s._v("any")])]),s._v(" "),a("li",[s._v("必须 "),a("code",[s._v("是")])])])])]),s._v(" "),a("p",[a("strong",[s._v("示例")])]),s._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" common "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"typescript-lodash"')]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Result1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" common"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("UnionToTuple"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// [1, 2, 3]")]),s._v("\n")])])])])}),[],!1,null,null,null);t.default=n.exports}}]);